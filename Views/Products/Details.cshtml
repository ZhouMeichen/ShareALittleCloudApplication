@model ShareALittle.Models.Product
@inject UserManager<ApplicationUser> userManager
@{
    ViewData["Title"] = "Details";
}
@{
    var currentUser = await userManager.GetUserAsync(User);
    var id = "";
    if (currentUser != null)
    {
        id = currentUser.Id;
    }
    var isAdmin = currentUser != null
&& await userManager.IsInRoleAsync(
    currentUser,
    "Admin");
}
<div class="container">
    <h2><b>Details</b></h2>
    <div style="float:right;">
        <button class="btn btn-info"><a asp-action="Index">Back to List</a></button>
        @if (Model.OwnerID == id || isAdmin)
        {
            <button class="btn btn-info"><a asp-action="Edit" asp-route-id="@Model.ProductID">Edit</a></button>
        }
    </div>


    <h4>Product</h4>



    <hr />
    <div class="detailbox">
        <br>
        <dl class="dl-horizontal">
            <dt>
                @Html.DisplayNameFor(model => model.ProductImage)
            </dt>

            <dd>

                <img id="myImg" style="width:100%;max-width:300px" src="data:image;base64,@System.Convert.ToBase64String(Model.ProductImage)" />

                <!-- The Modal -->
                <div id="myModal" class="Popup">

                    <!-- The Close Button -->
                    <span class="close">&times;</span>

                    <!-- Modal Content (The Image) -->
                    <img class="Popup-content" id="img01">

                    <!-- Modal Caption (Image Text) -->
                    <div id="caption"></div>
                </div>
            </dd>
            <dt>
                @Html.DisplayNameFor(model => model.ProductName)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.ProductName)
            </dd>
            <dt>
                @Html.DisplayNameFor(model => model.ProductDescription)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.ProductDescription)
            </dd>
            <dt>
                @Html.DisplayNameFor(model => model.ProductPrice)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.ProductPrice)
            </dd>
            <dt>
                @Html.DisplayNameFor(model => model.Category)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.Category.CategoryName)
            </dd>
            <dt>
                @Html.DisplayNameFor(model => model.ContactDetail)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.ContactDetail)
            </dd>
        </dl>
    </div>


    <script>
        var modal = document.getElementById("myModal");

        // Get the image and insert it inside the modal - use its "alt" text as a caption
        var img = document.getElementById("myImg");
        var modalImg = document.getElementById("img01");
        var captionText = document.getElementById("caption");
        img.onclick = function () {
            modal.style.display = "block";
            modalImg.src = this.src;
            captionText.innerHTML = this.alt;
        }

        // Get the <span> element that closes the modal
        var span = document.getElementsByClassName("close")[0];

        // When the user clicks on <span> (x), close the modal
        span.onclick = function () {
            modal.style.display = "none";
        }
    </script>
</div>